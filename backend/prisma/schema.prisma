generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  firstName   String?
  lastName    String?
  bio         String?
  location    String?


  geoLocation  Json?
  dances       String[]
  levels       Json?
  availability String?       // ‚Üê AJOUTE SEULEMENT CELUI-CI
  username   String?  @unique
  avatarUrl  String?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  lat        Float?
  lng        Float?

  likes           Like[]
  swipesGiven     Swipe[] @relation("UserSwipesGiven")
  swipesReceived  Swipe[] @relation("UserSwipesReceived")
  eventsOrganized Event[] @relation("EventOrganizer")
}

model Event {
  id            Int      @id @default(autoincrement())
  name          String
  dances        String[]
  lat           Float
  lng           Float
  date          DateTime
  createdAt     DateTime @default(now())

  organizerId   Int?
  organizer     User?    @relation("EventOrganizer", fields: [organizerId], references: [id])

  likes         Like[]   // <--- ajoute cette ligne
}


model Swipe {
  id        Int  @id @default(autoincrement())
  swiperId  Int
  swipedId  Int
  liked     Boolean
  createdAt DateTime @default(now())

  swiper    User @relation("UserSwipesGiven", fields: [swiperId], references: [id])
  swiped    User @relation("UserSwipesReceived", fields: [swipedId], references: [id])

  @@unique([swiperId, swipedId])
}



model Like {
  id        Int   @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now())

  event     Event @relation(fields: [eventId], references: [id])
  user      User  @relation(fields: [userId], references: [id])

  @@unique([userId, eventId])
}
